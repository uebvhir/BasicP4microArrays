% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doClusterAnalysis.R
\name{doClusterAnalysis}
\alias{doClusterAnalysis}
\title{doClusterAnalysis}
\usage{
doClusterAnalysis(clustPar)
}
\arguments{
\item{clustPar}{List object that contains the parameters needed to carry out the analysis.}
}
\description{
Function to perform cluster analysis
}
\examples{
\dontrun{
clustParsList <- list()
for(i in 1:length(compName))
{
  pvalType <- ifelse(adjMethod[i] == "none", "pvalues", "adj-pvalues")
  clustPar <- list(expres = NULL,
                   expresFileName = "exprs.filtered.Rda",
                   geneListFName = paste("geneList",  compName[i],
                                         pvalType, "LT", pValCutOff[i], "Rda", sep = "."),
                   genes2cluster = NULL,
                   samples2cluster = s2clust,
                   sampleNames = as.character(targets$ShortName)[s2clust],
                   comparisonName = compName[i],
                   anotPackage = "org.Hs.eg",
                   my.symbols = symbolsTable,
                   outputDir = outputDir,
                   fileOfLinks = linksFile,
                   numClusters = 2,
                   rowDistance = NULL,
                   colDistance = NULL,
                   RowVals = TRUE,
                   ColVals = FALSE,
                   escala = "row",
                   colorsSet = pal,
                   densityInfo = "density",
                   colsForGroups = c(rep("pink", 5), rep("blue", 5)),
                   cexForColumns = 0.8,
                   cexForRows = 0.8,
                   Title = paste(compName[i],
                                 "with", pvalType,
                                 "<", pValCutOff[i],
                                 ifelse(minLogFoldChange[i]==0, "",
                                        paste0("\\n and |logFC|>=", minLogFoldChange[i]))),
                   paste("Comparison:", compName[i]),
                   csvType = csvType)

  clustParsList <- add2parsList(clustParsList, clustPar)
}

for(ix in 1:length(clustParsList))
{
 hm.Estudi <- BasicP::doClusterAnalysis(clustParsList[ix])
}
}
}
